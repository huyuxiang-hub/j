
https://stackoverflow.com/questions/19651788/whats-the-meaning-of-exception-code-exc-i386-gpflt




after ZSolid::Draw 
Process 34665 stopped
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)
    frame #0: 0x00007fff725a6ee8 libsystem_c.dylib`__cxa_finalize_ranges + 346
libsystem_c.dylib`__cxa_finalize_ranges:
->  0x7fff725a6ee8 <+346>: callq  *0x18(%rax,%r15)
    0x7fff725a6eed <+351>: jmp    0x7fff725a6efe            ; <+368>
    0x7fff725a6eef <+353>: callq  *0x18(%r12,%r15)
    0x7fff725a6ef4 <+358>: jmp    0x7fff725a6efe            ; <+368>
Target 0: (PMTSolidTest) stopped.

Process 34665 launched: '/usr/local/opticks/lib/PMTSolidTest' (x86_64)
(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)
  * frame #0: 0x00007fff725a6ee8 libsystem_c.dylib`__cxa_finalize_ranges + 346
    frame #1: 0x00007fff725a71fe libsystem_c.dylib`exit + 55
    frame #2: 0x00007fff724fa01c libdyld.dylib`start + 8
(lldb) 



after ZSolid::Draw 
Process 34871 stopped
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)
    frame #0: 0x00007fff725a6ee8 libsystem_c.dylib`__cxa_finalize_ranges + 346
libsystem_c.dylib`__cxa_finalize_ranges:
->  0x7fff725a6ee8 <+346>: callq  *0x18(%rax,%r15)
    0x7fff725a6eed <+351>: jmp    0x7fff725a6efe            ; <+368>
    0x7fff725a6eef <+353>: callq  *0x18(%r12,%r15)
    0x7fff725a6ef4 <+358>: jmp    0x7fff725a6efe            ; <+368>
Target 0: (PMTSolidTest) stopped.

Process 34871 launched: '/usr/local/opticks/lib/PMTSolidTest' (x86_64)
(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)
  * frame #0: 0x00007fff725a6ee8 libsystem_c.dylib`__cxa_finalize_ranges + 346
    frame #1: 0x00007fff725a71fe libsystem_c.dylib`exit + 55
    frame #2: 0x00007fff724fa01c libdyld.dylib`start + 8
    frame #3: 0x00007fff724fa015 libdyld.dylib`start + 1
(lldb) 


    0x7fff7280bfee <+206>: je     0x7fff7280c004            ; <+228>
    0x7fff7280bff0 <+208>: movb   0x1(%rsi,%r8), %cl
Target 0: (PMTSolidTest) stopped.

Process 35136 launched: '/usr/local/opticks/lib/PMTSolidTest' (x86_64)
(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x108fffdcb)
  * frame #0: 0x00007fff7280bfe6 libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell + 198
    frame #1: 0x00000001000e25af libPMTSim.dylib`ZCanvas::draw(int, int, int, int, int) + 207
    frame #2: 0x00000001000e235d libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 1517
    frame #3: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #4: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #5: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #6: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #7: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #8: 0x00000001000e1e07 libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 151
    frame #9: 0x00000001000db56d libPMTSim.dylib`ZSolid::draw(char const*, int) + 173
    frame #10: 0x000000010000af40 PMTSolidTest`main + 352
    frame #11: 0x00007fff724fa015 libdyld.dylib`start + 1
    frame #12: 0x00007fff724fa015 libdyld.dylib`start + 1
(lldb) f 1
frame #1: 0x00000001000e25af libPMTSim.dylib`ZCanvas::draw(int, int, int, int, int) + 207
libPMTSim.dylib`ZCanvas::draw:
    0x1000e25af <+207>: jmp    0x1000e25d5               ; <+245>
    0x1000e25b1 <+209>: leaq   0x2a86f(%rip), %rdi       ; "ZCanvas::_draw error out of range x+l %d  nx %d  y %d ny %d \n"
    0x1000e25b8 <+216>: xorl   %eax, %eax
    0x1000e25ba <+218>: callq  0x10010017a               ; symbol stub for: printf
(lldb) f 2
frame #2: 0x00000001000e235d libPMTSim.dylib`ZSolid::draw_r(G4VSolid const*, int) + 1517
libPMTSim.dylib`ZSolid::draw_r:
    0x1000e235d <+1517>: movq   0x78(%r14), %rdi
    0x1000e2361 <+1521>: movsd  -0x78(%rbp), %xmm0        ; xmm0 = mem[0],zero
    0x1000e2366 <+1526>: addsd  -0x30(%rbp), %xmm0
    0x1000e236b <+1531>: cvttsd2si %xmm0, %r9d
(lldb) 


