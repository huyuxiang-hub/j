# ~/.bash_profile > ~/.bashrc > ~/j/.junosw_build_config

jre_notes(){ cat << EON
To allow this same script to be used on multiple nodes
setup some symbolic links in $HOME

+------------------------------+--------------------------------+---------------------------+
| symbolic link                |  N(workstation)                |  L(lxslc7)                |
+==============================+================================+===========================+
| $HOME/tmp                    |  /data/blyth/opticks           |                           |
+------------------------------+--------------------------------+---------------------------+
| $HOME/opticks_download_cache |  /data/opticks_download_cache  |                           |
+------------------------------+--------------------------------+---------------------------+



Use symbolic links to make this work on both N(workstation) and L(lxslc7) 
EON
}

_jre(){
    : settings that can be run all the time without causing env confusion
    export TMP=$HOME/tmp     ## needed for runtime 
    export JUNOTOP=$HOME/junotop
    jt(){ cd $JUNOTOP && pwd ; } 
    je(){ cd $JUNOTOP/junoenv && pwd && git status ; } 
    jo(){ cd $JUNOTOP/junosw  && pwd && git status ; } 
    o(){  cd $JUNOTOP/opticks && pwd && git status ; }
    j(){  cd $HOME/j  && pwd && git status ; } 
}
_jre

_jre_opticks_source_build_env()
{
    : ~/j/.junosw_build_config
    : this setup enables opticks-full source build ... so its bootstrapping 
    : mostly NOT needed for release running

    export OPTICKS_DOWNLOAD_CACHE=$HOME/opticks_download_cache
    export OPTICKS_CUDA_PREFIX=/usr/local/cuda-11.7
    export OPTICKS_OPTIX_PREFIX=/cvmfs/opticks.ihep.ac.cn/external/OptiX_750
    export OPTICKS_COMPUTE_CAPABILITY=70

    export OPTICKS_PREFIX=$JUNOTOP/ExternalLibs/opticks/head
    export OPTICKS_HOME=$JUNOTOP/opticks
    export PYTHONPATH=$(dirname $OPTICKS_HOME):$PYTHONPATH

    opticks-(){ source $JUNOTOP/opticks/opticks.bash && opticks-env $* ; }
    opticks-

    oo(){ opticks- ; cd $(opticks-home) ; om- ; om-- ;  } 

    : env setup used by om- oe- needs the opticks-setup.sh 
    : generated as part of opticks-full : so "oo" only works
    : for rebuilding after small changes, not initial building
    : initial building requires opticks-full 
}

jre(){ 
    : ~/j/.junosw_build_config
    _jre 

    _source(){ [ -s "$1" ] && source "$1" ; }
    _source $JUNOTOP/bashrc.sh;
    _source $JUNOTOP/sniper/InstallArea/bashrc;
    _source $JUNOTOP/sniper/InstallArea/share/sniper/setup.sh;
    _source $JUNOTOP/mt.sniper/InstallArea/bashrc;
    _source $JUNOTOP/junosw/InstallArea/setup.sh

    #echo === $FUNCNAME : to enable opticks-full source build comment release hookup, start new session, jre, _jre_opticks_source_build_env 
    _jre_opticks_source_build_env  

}

